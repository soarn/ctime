name: CI/CD - Docker Build & AWS Copilot Deploy

on:
  push:
    branches:
      - master
  release:
    types: [published]

env:
  IMAGE_NAME: soarn/ctime
  GHCR_IMAGE_NAME: ghcr.io/${{ github.repository_owner }}/ctime
  SENTRY_PROJECT: '4508790454681600'
  SENTRY_ORG: soarndev

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install Dependencies
        run: |
          pip install sentry-cli
          npm install -g semantic-release @semantic-release/commit-analyzer @semantic-release/release-notes-generator @semantic-release/changelog @semantic-release/git

      - name: Determine Version with Semantic Release
        id: semantic
        run: |
          VERSION=$(npx semantic-release --dry-run | grep -oP 'The next release version is \K[\d.]+' || echo "latest")
          echo "RELEASE_VERSION=$VERSION" >> $GITHUB_ENV
          echo "Determined release version: $VERSION"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Create Sentry Release
        if: github.event_name == 'release'
        run: |
          sentry-cli releases new "$RELEASE_VERSION"
          sentry-cli releases set-commits --auto "$RELEASE_VERSION"
        env:
          SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
          SENTRY_ORG: ${{ env.SENTRY_ORG }}
          SENTRY_PROJECT: ${{ env.SENTRY_PROJECT }}

      - name: Build Docker Image
        run: |
          docker build -t $IMAGE_NAME:latest .
          docker tag $IMAGE_NAME:latest $IMAGE_NAME:$RELEASE_VERSION
          docker tag $IMAGE_NAME:latest $GHCR_IMAGE_NAME:latest
          docker tag $IMAGE_NAME:latest $GHCR_IMAGE_NAME:$RELEASE_VERSION

      - name: Login to DockerHub
        if: github.event_name == 'release'
        run: echo "${{ secrets.DOCKERHUB_TOKEN }}" | docker login -u "${{ secrets.DOCKERHUB_USERNAME }}" --password-stdin

      - name: Push to DockerHub
        if: github.event_name == 'release'
        run: |
          docker push $IMAGE_NAME:latest
          docker push $IMAGE_NAME:$RELEASE_VERSION

      - name: Login to GitHub Container Registry
        if: github.event_name == 'release'
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u "${{ github.actor }}" --password-stdin

      - name: Push to GHCR
        if: github.event_name == 'release'
        run: |
          docker push $GHCR_IMAGE_NAME:latest
          docker push $GHCR_IMAGE_NAME:$RELEASE_VERSION

      - name: Set Sentry Release Deployed
        if: github.event_name == 'release'
        run: sentry-cli releases set-deployed $RELEASE_VERSION --env production
        env:
          SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
          SENTRY_ORG: ${{ env.SENTRY_ORG }}
          SENTRY_PROJECT: ${{ env.SENTRY_PROJECT }}

  # deploy:
  #   needs: build-and-push
  #   runs-on: ubuntu-latest
  #   if: github.event_name == 'release'
  #   steps:
  #     - name: Checkout Code
  #       uses: actions/checkout@v4

  #     - name: Install AWS Copilot CLI
  #       run: |
  #         curl -Lo copilot https://github.com/aws/copilot-cli/releases/latest/download/copilot-linux && chmod +x copilot && sudo mv copilot /usr/local/bin/

  #     - name: Authenticate with AWS
  #       run: |
  #         aws configure set aws_access_key_id ${{ secrets.AWS_ACCESS_KEY_ID }}
  #         aws configure set aws_secret_access_key ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  #         aws configure set default.region us-west-2

  #     - name: Deploy with AWS Copilot
  #       run: copilot svc deploy --name ctime-app --env prod
