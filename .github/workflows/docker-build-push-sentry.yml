name: Docker Build, Push & Sentry Release

on:
  pull_request:
    branches:
      - master
    types:
      - closed
    paths:
      - '.release-please-manifest.json' # Trigger only when release-please PR is merged
  workflow_dispatch:

permissions:
  contents: write
  packages: write # Required to push to GitHub Container Registry

jobs:
  docker-build-push-sentry:
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install Python dependencies
        run: pip install -r requirements.txt

      - name: Extract release version
        id: extract_version
        run: |
          RELEASE_VERSION=$(jq -r '.releases."ctime"?.version' .release-please-manifest.json)
          if [[ -z "$RELEASE_VERSION" ]]; then
            RELEASE_VERSION="0.0.0-dev" # Default if version not found (e.g., no release yet)
          fi
          echo "RELEASE_VERSION=$RELEASE_VERSION" >> "$GITHUB_OUTPUT"

      - name: Build Docker image
        run: docker build -t soarn/ctime:${{ steps.extract_version.outputs.RELEASE_VERSION }} .
        # Consider adding --build-arg for things like version number if needed

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Push Docker image to Docker Hub
        run: docker push soarn/ctime:${{ steps.extract_version.outputs.RELEASE_VERSION }}

      - name: Install Sentry CLI
        run: pip install --upgrade sentry-cli

      - name: Create Sentry release
        run: sentry-cli releases new ${{ steps.extract_version.outputs.RELEASE_VERSION }}
        env:
          SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
          SENTRY_ORG: soarndev
          SENTRY_PROJECT: ctime

      - name: Associate commits with Sentry release
        run: sentry-cli releases set-commits --auto ${{ steps.extract_version.outputs.RELEASE_VERSION }}
        env:
          SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
          SENTRY_ORG: soarndev
          SENTRY_PROJECT: ctime

      - name: Finalize Sentry release
        run: sentry-cli releases finalize ${{ steps.extract_version.outputs.RELEASE_VERSION }}
        env:
          SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
          SENTRY_ORG: soarndev
          SENTRY_PROJECT: ctime
